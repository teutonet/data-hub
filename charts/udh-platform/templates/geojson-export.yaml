{{- $name := "geojson-export" -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" (include "common.names.fullname" .) $name }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ $name }}
spec:
  replicas: {{ .Values.geojsonExport.replicas | default 1 | int }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ $name }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: {{ $name }}
    spec:
      {{- include "udh-platform.imagePullSecrets" (dict "context" .) | nindent 6 }}
      containers:
      - name: geojson-export
        image: {{ include "udh-platform.images.image" (dict "imageRoot" .Values.geojsonExport.image "global" .Values.global) }}
        imagePullPolicy: {{ .Values.geojsonExport.image.pullPolicy }}
        ports:
          - containerPort: 3001
            name: http
        env:
          - name: DB_HOST
            value: {{ printf "%s-postgres" (include "common.names.fullname" .) }}
          - name: DB_NAME
            value: mdb
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                # TODO: use dedicated user with less permissions
                name: {{ printf "postgres.%s-postgres.credentials.postgresql.acid.zalan.do" (include "common.names.fullname" .) | quote }}
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ printf "postgres.%s-postgres.credentials.postgresql.acid.zalan.do" (include "common.names.fullname" .) | quote }}
                key: password
          - name: PROMETHEUS_HOST
            value: {{ printf "http://%s/prometheus" (include "data-hub.name" (dict "context" . "name" "mimir-nginx")) }}
        resources: {{- toYaml .Values.geojsonExport.resources | nindent 10 }}

---
{{- $serviceName := printf "%s-%s" (include "common.names.fullname" .) $name -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ $serviceName }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ $name }}
spec:
  ports:
  - port: 80
    name: http
    targetPort: http
  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $name }}
---
{{- $host := printf "export.%s" .Values.global.baseDomain -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-geojson-export" (include "common.names.fullname" .) | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ $name }}
  annotations: 
    {{- include "udh.ingress.annotations" (dict "annotations" .Values.geojsonExport.ingress.annotations "context" .) | nindent 4 }}
spec:
  rules:
    - host: {{ $host | quote }}
      http:
        paths:
          - backend: {{- include "common.ingress.backend" (dict "serviceName"  $serviceName "servicePort" "http" "context" .) | nindent 14 }}
            pathType: Prefix
            path: /
  tls:
  - hosts:
    - {{ $host }}
    secretName: {{ $host }}-tls
